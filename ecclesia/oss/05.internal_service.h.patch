--- src/internal_service.h	2020-03-26 13:37:18.000000000 -0700
+++ new/internal_service.h	2020-07-29 16:45:48.715226607 -0700
@@ -16,8 +16,8 @@
 
 #include <stdbool.h>
 
-#include <jansson.h>
-#include <curl/curl.h>
+#include "jansson.h"
+#include "curl/curl.h"
 #ifndef NO_CZMQ
 #include <czmq.h>
 #endif
@@ -30,10 +30,21 @@
  * A strcuture defining redfish service data.
  */
 typedef struct _redfishService {
+    /**
+     * A lock to regulate access to the endpoint information (host,
+     * unix_domain_socket). Currently, nobody
+     * **/
+#ifdef _MSC_VER
+    HANDLE endpoint_mutex;
+#else
+    pthread_mutex_t endpoint_mutex;
+#endif
     /** The host, including protocol schema **/
     char* host;
+    /** The unix domain socket path if applicable, NULL otherwise **/
+    char* unix_domain_socket;
     /** The queue of asynchronous HTTP(s) requests **/
-    queue* queue;
+    struct queue* queue;
     /** The thread running asynchronous HTTP(s) requests **/
     thread asyncThread;
     /** The non-async CURL implementation **/
@@ -68,18 +79,12 @@
      * @see bearerToken
      */
     char* otherAuth;
-    /** A lock to regulate access to this struct **/
-#ifdef _MSC_VER
-    HANDLE mutex;
-#else
-    pthread_mutex_t mutex;
-#endif
     /** A reference count for this structure. Once this reaches 0 it will be freed **/
     size_t refCount;
     /** An indicator to the async thread to terminate itself **/
     bool selfTerm;
     /** The queue of events to process **/
-    queue* eventThreadQueue;
+    struct queue* eventThreadQueue;
     /** The thread listening for events **/
     thread eventThread;
     /** The thread listening for sse events **/
